#include <stdio.h>

void rotation(int A[], int N, int K) {
    K = K % N;  // Handle cases where K > N
    if (K == 0) {  // No rotation needed
        for (int i = 0; i < N; i++) {
            printf("%d", A[i]);
            if (i != N - 1) printf(" ");  // Space between elements
        }
        printf("\n");
        return;
    }

    int temp[K]; 
    // Step 1: Store the first K elements in temp
    for (int i = 0; i < K; i++) {
        temp[i] = A[i];
    }
    
    // Step 2: Shift the remaining elements to the left
    for (int i = 0; i < N - K; i++) {
        A[i] = A[i + K];
    }

    // Step 3: Copy the temporary elements to the end of the array
    for (int i = 0; i < K; i++) {
        A[N - K + i] = temp[i];
    }

    // Print the rotated array
    for (int i = 0; i < N; i++) {
        printf("%d", A[i]);
        if (i != N - 1) printf(" ");  // No trailing space
    }
    printf("\n");
}

int main() {
    int N, K;
    scanf("%d %d", &N, &K);

    if (N <= 0) {  // Handle invalid cases
        return 0;
    }

    int A[N];
    for (int i = 0; i < N; i++) {
        scanf("%d", &A[i]);
    }

    rotation(A, N, K);
    return 0;
}






#include <stdio.h>

int main() {
    int N;
    scanf("%d", &N);

    if (N == 0) {
        printf("0\n");
        return 0;
    } else if (N == 1) {
        printf("1\n");
        return 0;
    }

    int prev = 0, curr = 1, next;

    for (int i = 2; i <= N; i++) {
        next = (prev + curr) % 10; // Only keep the unit digit
        prev = curr;
        curr = next;
    }

    printf("%d\n", curr);
    return 0;
}




#include <stdio.h>

void reverseString(char* s, int sSize) {
    int left = 0;
    int right = sSize - 1;

    while (left < right) {
        // Swap the characters at the two pointers
        char temp = s[left];
        s[left] = s[right];
        s[right] = temp;

        // Move the pointers toward the center
        left++;
        right--;
    }
}





#include <stdio.h>
#include <string.h>

int numJewelsInStones(char* jewels, char* stones) {
    int jewelCount = 0;

    // Create an array to mark which characters are jewels (ASCII size: 128)
    int isJewel[128] = {0};

    // Mark characters in jewels as jewels
    for (int i = 0; jewels[i] != '\0'; i++) {
        isJewel[(int)jewels[i]] = 1;
    }

    // Count how many characters in stones are jewels
    for (int i = 0; stones[i] != '\0'; i++) {
        if (isJewel[(int)stones[i]]) {
            jewelCount++;
        }
    }

    return jewelCount;
}